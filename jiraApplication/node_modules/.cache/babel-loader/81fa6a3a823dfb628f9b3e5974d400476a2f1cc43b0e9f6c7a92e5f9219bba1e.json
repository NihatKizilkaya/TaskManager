{"ast":null,"code":"import React, { useEffect } from 'react';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar headerDefault = 'Warning';\nvar btnTextDefault = 'Close';\nvar errorColor = 'rgb(220, 53, 69)';\nvar warningColor = 'rgb(255, 193, 7)';\nvar successColor = 'rgb(40, 167, 69)';\nvar defaultColor = 'rgb(51, 51, 51)';\nvar AlertReact = function AlertReact(_ref) {\n  var _ref$header = _ref.header,\n    header = _ref$header === void 0 ? headerDefault : _ref$header,\n    _ref$btnText = _ref.btnText,\n    btnText = _ref$btnText === void 0 ? btnTextDefault : _ref$btnText,\n    text = _ref.text,\n    show = _ref.show,\n    showBorderBottom = _ref.showBorderBottom,\n    type = _ref.type,\n    color = _ref.color,\n    onClosePress = _ref.onClosePress,\n    _ref$pressCloseOnOuts = _ref.pressCloseOnOutsideClick,\n    pressCloseOnOutsideClick = _ref$pressCloseOnOuts === void 0 ? true : _ref$pressCloseOnOuts,\n    _ref$alertStyles = _ref.alertStyles,\n    alertStyles = _ref$alertStyles === void 0 ? {} : _ref$alertStyles,\n    _ref$headerStyles = _ref.headerStyles,\n    headerStyles = _ref$headerStyles === void 0 ? {} : _ref$headerStyles,\n    _ref$textStyles = _ref.textStyles,\n    textStyles = _ref$textStyles === void 0 ? {} : _ref$textStyles,\n    _ref$buttonStyles = _ref.buttonStyles,\n    buttonStyles = _ref$buttonStyles === void 0 ? {} : _ref$buttonStyles;\n  useEffect(function () {\n    if (pressCloseOnOutsideClick && show) {\n      document.addEventListener('mousedown', handleClickOutsideAlert);\n    }\n    return function () {\n      document.removeEventListener('mousedown', handleClickOutsideAlert);\n    };\n  }, [show]);\n  var handleClickOutsideAlert = function handleClickOutsideAlert(e) {\n    if (show) {\n      var target = e === null || e === void 0 ? void 0 : e.target;\n      if ((target === null || target === void 0 ? void 0 : target.className) === 'backdrop') {\n        onClosePressClick();\n      }\n    }\n  };\n  var onClosePressClick = function onClosePressClick() {\n    document.removeEventListener('mousedown', handleClickOutsideAlert);\n    onClosePress();\n  };\n  var getColor = function getColor() {\n    if (color) {\n      return color;\n    } else if (type === 'error') return errorColor;else if (type === 'success') return successColor;else if (type === 'warning') return warningColor;else return defaultColor;\n  };\n  var colorToUse = getColor();\n  var getAlertStyle = function getAlertStyle() {\n    if (showBorderBottom === false) {\n      return alertStyles;\n    } else {\n      return _extends({\n        borderBottom: \"3px solid \" + colorToUse\n      }, alertStyles);\n    }\n  };\n  return React.createElement(\"div\", {\n    className: 'alert-container'\n  }, show ? React.createElement(\"div\", {\n    role: 'alert'\n  }, React.createElement(\"div\", {\n    className: 'backdrop'\n  }), React.createElement(\"div\", {\n    className: 'alert-main',\n    style: getAlertStyle()\n  }, React.createElement(\"h3\", {\n    className: 'alert-header',\n    style: headerStyles\n  }, header), React.createElement(\"p\", {\n    className: 'alert-body',\n    style: textStyles\n  }, text), React.createElement(\"a\", {\n    onClick: function onClick() {\n      return onClosePressClick();\n    },\n    className: 'alert-button',\n    role: 'button',\n    style: _extends({\n      backgroundColor: colorToUse\n    }, buttonStyles),\n    href: '#'\n  }, btnText))) : null);\n};\nexport default AlertReact;","map":{"version":3,"names":["headerDefault","btnTextDefault","errorColor","warningColor","successColor","defaultColor","AlertReact","_ref","header","_ref$header","btnText","_ref$btnText","text","show","showBorderBottom","type","color","onClosePress","pressCloseOnOutsideClick","_ref$pressCloseOnOuts","alertStyles","_ref$alertStyles","headerStyles","_ref$headerStyles","textStyles","_ref$textStyles","buttonStyles","_ref$buttonStyles","useEffect","document","addEventListener","handleClickOutsideAlert","removeEventListener","e","target","className","onClosePressClick","getColor","colorToUse","getAlertStyle","_extends","borderBottom","React","createElement","role","style","onClick","backgroundColor","href"],"sources":["/Users/nihatkizilkaya/Documents/Task/jiraaplication/node_modules/react-popup-alert/src/constants.jsx","/Users/nihatkizilkaya/Documents/Task/jiraaplication/node_modules/react-popup-alert/src/index.tsx"],"sourcesContent":["// Texts\nexport const headerDefault = 'Warning' // warning text\nexport const btnTextDefault = 'Close' // button text\n\n// Colors\nexport const errorColor = 'rgb(220, 53, 69)' // '#dc3545'\nexport const warningColor = 'rgb(255, 193, 7)' // '#28a745'\nexport const successColor = 'rgb(40, 167, 69)' // '#ffc107'\nexport const defaultColor = 'rgb(51, 51, 51)' // '#333'\n","import React, { useEffect } from 'react'\nimport {\n  headerDefault,\n  btnTextDefault,\n  defaultColor,\n  errorColor,\n  successColor,\n  warningColor\n} from './constants'\nimport './styles.scss'\n\ninterface AlertProps {\n  text: string\n  onClosePress: Function\n  show: boolean\n  header?: string | undefined\n  btnText?: string | undefined\n  showBorderBottom?: boolean\n  type?: string\n  color?: string\n  pressCloseOnOutsideClick?: boolean\n  alertStyles?: object\n  headerStyles?: object\n  textStyles?: object\n  buttonStyles?: object\n}\n\nconst AlertReact = ({\n  // text\n  header = headerDefault,\n  btnText = btnTextDefault,\n  text,\n  // visuals\n  show,\n  showBorderBottom,\n  type,\n  color,\n  // functions\n  onClosePress,\n  pressCloseOnOutsideClick = true,\n  // styles\n  alertStyles = {},\n  headerStyles = {},\n  textStyles = {},\n  buttonStyles = {}\n}: AlertProps) => {\n  /* LIFECYCLE METHODS */\n\n  useEffect(() => {\n    // Add event listener if it is shown\n    if (pressCloseOnOutsideClick && show) {\n      document.addEventListener('mousedown', handleClickOutsideAlert)\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutsideAlert)\n    }\n  }, [show])\n\n  /* LISTENER FUNCTIONS */\n\n  const handleClickOutsideAlert = (e: Event): void => {\n    if (show) {\n      const target = e?.target as HTMLInputElement\n      if (target?.className === 'backdrop') {\n        onClosePressClick()\n      }\n    }\n  }\n\n  const onClosePressClick = () => {\n    document.removeEventListener('mousedown', handleClickOutsideAlert)\n    onClosePress()\n  }\n\n  /* GET DATA */\n\n  const getColor = () => {\n    if (color) {\n      return color\n    } else if (type === 'error') return errorColor\n    else if (type === 'success') return successColor\n    else if (type === 'warning') return warningColor\n    else return defaultColor\n  }\n  const colorToUse = getColor()\n\n  const getAlertStyle = () => {\n    if (showBorderBottom === false) {\n      return alertStyles\n    } else {\n      return { borderBottom: `3px solid ${colorToUse}`, ...alertStyles }\n    }\n  }\n\n  return (\n    <div className='alert-container'>\n      {show ? (\n        <div role='alert'>\n          <div className='backdrop' />\n          <div className='alert-main' style={getAlertStyle()}>\n            <h3 className='alert-header' style={headerStyles}>\n              {header}\n            </h3>\n            <p className='alert-body' style={textStyles}>\n              {text}\n            </p>\n            <a\n              onClick={() => onClosePressClick()}\n              className='alert-button'\n              role='button'\n              style={{ backgroundColor: colorToUse, ...buttonStyles }}\n              href='#'\n            >\n              {btnText}\n            </a>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default AlertReact\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}