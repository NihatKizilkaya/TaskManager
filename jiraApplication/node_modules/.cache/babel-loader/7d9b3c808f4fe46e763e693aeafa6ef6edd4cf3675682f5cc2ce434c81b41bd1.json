{"ast":null,"code":"var _jsxFileName = \"/Users/nihatkizilkaya/Documents/Task_Manager/jiraaplication/src/Components/ChangeLang.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport i18n from 'i18next';\nimport TaskCreate from './TaskCreate';\nimport App from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChangeLang() {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [lang, setLang] = useState('en');\n  useEffect(() => {\n    i18n.init({\n      resources: {\n        en: {\n          translation: {\n            Hoşgeldiniz: Welcome\n          }\n        },\n        sp: {\n          translation: {}\n        }\n      },\n      lng: 'en',\n      fallbackLng: 'en',\n      interpolation: {\n        escapeValue: false\n      }\n    });\n    setLang(i18n.language);\n  }, []);\n  const langChange = e => {\n    setLang(e.target.value);\n    i18n.changeLanguage(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"selectBox\",\n      onChange: langChange,\n      name: \"lang\",\n      value: lang,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        className: \"optionsMenu\",\n        value: \"en\",\n        children: \"English\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        className: \"optionsMenu\",\n        value: \"sp\",\n        children: \"Turkish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"textToChange\",\n      children: t(TaskCreate)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"textToChange\",\n      children: t(App)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(ChangeLang, \"VUo+ZZTia5ayHKCJHCb+mYc51Yc=\", false, function () {\n  return [useTranslation];\n});\n_c = ChangeLang;\nvar _c;\n$RefreshReg$(_c, \"ChangeLang\");","map":{"version":3,"names":["useEffect","useState","useTranslation","i18n","TaskCreate","App","jsxDEV","_jsxDEV","ChangeLang","_s","t","lang","setLang","init","resources","en","translation","Hoşgeldiniz","Welcome","sp","lng","fallbackLng","interpolation","escapeValue","language","langChange","e","target","value","changeLanguage","children","className","onChange","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nihatkizilkaya/Documents/Task_Manager/jiraaplication/src/Components/ChangeLang.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport i18n from 'i18next';\nimport TaskCreate from './TaskCreate';\nimport App from '../App';\n\nexport default function ChangeLang() {\n  const { t } = useTranslation();\n  const [lang, setLang] = useState('en');\n\n  useEffect(() => {\n   \n    i18n.init({\n      resources: {\n        en: {\n          translation: {\n         Hoşgeldiniz:Welcome\n          }\n        },\n        sp: {\n          translation: {\n           \n          }\n        }\n      },\n      lng: 'en', \n      fallbackLng: 'en', \n      interpolation: {\n        escapeValue: false \n      }\n    });\n    setLang(i18n.language);\n  }, []);\n\n  const langChange = (e) => {\n    setLang(e.target.value);\n    i18n.changeLanguage(e.target.value);\n  };\n\n  return (\n    <div>\n      <select\n        className=\"selectBox\"\n        onChange={langChange}\n        name=\"lang\"\n        value={lang}\n      >\n        <option className=\"optionsMenu\" value=\"en\">\n          English\n        </option>\n        <option className=\"optionsMenu\" value=\"sp\">\n          Turkish\n        </option>\n      </select>\n      <p className=\"textToChange\">{t(TaskCreate)}</p>\n      <p className=\"textToChange\">{t(App)}</p>\n    </div>\n  );\n}\n\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM;IAAEC;EAAE,CAAC,GAAGR,cAAc,CAAC,CAAC;EAC9B,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IAEdG,IAAI,CAACU,IAAI,CAAC;MACRC,SAAS,EAAE;QACTC,EAAE,EAAE;UACFC,WAAW,EAAE;YACdC,WAAW,EAACC;UACX;QACF,CAAC;QACDC,EAAE,EAAE;UACFH,WAAW,EAAE,CAEb;QACF;MACF,CAAC;MACDI,GAAG,EAAE,IAAI;MACTC,WAAW,EAAE,IAAI;MACjBC,aAAa,EAAE;QACbC,WAAW,EAAE;MACf;IACF,CAAC,CAAC;IACFX,OAAO,CAACT,IAAI,CAACqB,QAAQ,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,UAAU,GAAIC,CAAC,IAAK;IACxBd,OAAO,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACvBzB,IAAI,CAAC0B,cAAc,CAACH,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,oBACErB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MACEwB,SAAS,EAAC,WAAW;MACrBC,QAAQ,EAAEP,UAAW;MACrBQ,IAAI,EAAC,MAAM;MACXL,KAAK,EAAEjB,IAAK;MAAAmB,QAAA,gBAEZvB,OAAA;QAAQwB,SAAS,EAAC,aAAa;QAACH,KAAK,EAAC,IAAI;QAAAE,QAAA,EAAC;MAE3C;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT9B,OAAA;QAAQwB,SAAS,EAAC,aAAa;QAACH,KAAK,EAAC,IAAI;QAAAE,QAAA,EAAC;MAE3C;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACT9B,OAAA;MAAGwB,SAAS,EAAC,cAAc;MAAAD,QAAA,EAAEpB,CAAC,CAACN,UAAU;IAAC;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/C9B,OAAA;MAAGwB,SAAS,EAAC,cAAc;MAAAD,QAAA,EAAEpB,CAAC,CAACL,GAAG;IAAC;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV;AAAC5B,EAAA,CApDuBD,UAAU;EAAA,QAClBN,cAAc;AAAA;AAAAoC,EAAA,GADN9B,UAAU;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}